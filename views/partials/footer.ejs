<% if(footer){ %>
    <div class="footer text-white flex justify-between items-center w-full fixed bottom-0 z-[10] bg-zinc-900 px-10 py-3">
        <a href="/feed"><i class="text-[1.4rem] ri-home-line"></i></a>
        <a href="/search"><i class="text-[1.4rem] ri-search-line"></i></a>
        <a href="/upload"><i class="text-[1.4rem] ri-add-box-line"></i></a>
        <a href="/profile">
          <div class="w-8 h-8 bg-zinc-300 rounded-full overflow-hidden">
            <img class="w-full h-full object-cover" src="<%= user.profileImage %>" alt="">
          </div>
        </a>
      </div>
<% } %>


<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"
    integrity="sha512-7eHRwcbYkK4d9g/6tD/mhkf++eoTHwpNM9woBxtPUBWm67zeAfFC+HrdoE2GanKeocly/VxeLvIqwvCdk7qScg=="
    crossorigin="anonymous" referrerpolicy="no-referrer">
</script>
  
<!--  dater, like and bookmark -->
  <script>
    function formatRelativeTime(date) {
      const now = new Date();
      const diff = now - date;

      // Convert milliseconds to seconds
      const seconds = Math.floor(diff / 1000);

      if (seconds < 60) {
        return `${seconds}s`;
      }

      const minutes = Math.floor(seconds / 60);

      if (minutes < 60) {
        return `${minutes}m`;
      }

      const hours = Math.floor(minutes / 60);

      if (hours < 24) {
        return `${hours}h`;
      }

      const days = Math.floor(hours / 24);

      if (days < 7) {
        return `${days}d`;
      }

      const weeks = Math.floor(days / 7);

      return `${weeks}w`;
    }
    document.querySelector(".parent")
      .addEventListener("click", function (dets) {
        if (dets.target.classList.contains("postimg")) {
          var post = dets.target.parentNode.parentNode;
          var heartwithborder = post.querySelector(".heart");
          if (heartwithborder.classList.contains("ri-heart-3-line")) {
            heartwithborder.classList.remove("ri-heart-3-line")
            heartwithborder.classList.add("ri-heart-3-fill")
            heartwithborder.classList.add("text-red-500")
            // heartwithborder.style.color = "red";
          }
          else {
            heartwithborder.classList.remove("ri-heart-3-fill")
            heartwithborder.classList.remove("text-red-500")
            heartwithborder.classList.add("ri-heart-3-line")
          }
          fetch(`/like/${dets.target.dataset.postid}`)
            .then(raw => raw.json())
            .then(response => {
              // console.log(response.like.length);
              post.querySelector(".likeval").textContent = response.like.length 
            })

          var icon = document.createElement("i");
          icon.classList.add("ri-heart-3-fill");
          icon.classList.add("text-red-700", "text-6xl", 'absolute', 'top-1/2', 'left-1/2', '-translate-x-[50%]', '-translate-y-[50%]', 'z-[9]');
          dets.target.parentNode.appendChild(icon);

          gsap.from(icon, {
            scale: .5,
            y: 30,
            opacity: 0,
            ease: Expo,
            duration: .3
          })

          gsap.to(icon, {
            scale: 0,
            y: -30,
            opacity: 0,
            duration: .3,
            ease: Expo,
            delay: .3,
            onComplete: () => {
              dets.target.parentNode.removeChild(icon);
            }
          })
        }
        else if (dets.target.classList.contains("save")) {
          var id = dets.target.dataset.postid;
          fetch(`/save/${id}`)
            .then(raw => raw.json())
            .then(result => {
              if (!dets.target.classList.contains("ri-bookmark-line")) {
                dets.target.classList.remove("ri-bookmark-fill", "text-zinc-100");
                dets.target.classList.add("ri-bookmark-line")
              }
              else {
                dets.target.classList.remove("ri-bookmark-line")
                dets.target.classList.add("ri-bookmark-fill", "text-zinc-100")
              }
            })
        }
      })
  </script>


  
<!--  get user profile from feed -->
  <!-- <script>
    document.addEventListener("DOMContentLoaded", function () {
  // Get all username elements within posts
  const usernames = document.querySelectorAll(".post .username");
  // console.log("usernames : ",usernames);

  // Attach click event listener to each username element
  usernames.forEach((username) => {
    username.addEventListener("click", function () {
      // Get the username
      const clickedUsername = username.textContent.trim(); // Trim whitespace
      // console.log("username : ",clickedUsername);
      
      // Fetch user profile data based on the clicked username
      fetchUserProfile(clickedUsername)
        .then((user) => {
          // Render user profile (example)
          // renderUserProfile(user);
          console.log(user);
          let clutter = "";
          clutter += `<a href="/profile/${user}">
                  <h2 class="username inline-block text-sm">
                    @${user.username}</h2></a>`;
          document.querySelector(".user").innerHTML = clutter;
        })
        .catch((error) => {
          console.error("Error fetching user profile:", error);
        });
    });
  });

  // Example function to fetch user profile data (replace with your actual logic)
  function fetchUserProfile(username) {
    // Assuming you have some logic to fetch user profile data based on the username
    // Here, we're returning a mock Promise with dummy profile data
    return new Promise((resolve, reject) => {
      // Example dummy profile data
      const profile = {
        username: username,
      };
      resolve(profile);
    });
  }

  // Example function to render user profile (replace with your actual rendering logic)
  function renderUserProfile(user) {
    // Example rendering - replace with your actual rendering logic
    console.log("Rendering user profile:", user);
    // Here, you would typically render the user profile data in a modal, sidebar, or another section of your page
    // Example:
    // document.querySelectorAll(".post .username").innerHTML = `
    //     <h2>${profile.username}</h2>
    // `;
    return user;
  }
});

  </script> -->
</body>

</html>